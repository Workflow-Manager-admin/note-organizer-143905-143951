{"is_source_file": true, "format": "Python", "description": "Main FastAPI application code for a Notes backend API, including endpoints for authentication, user info, categories, notes, and related social/web API setup.", "external_files": ["src.database", "src.database.User", "src.database.Note", "src.database.Category", "src.database.get_db", "src.database.init_db"], "external_methods": ["fastapi.FastAPI", "fastapi.Depends", "fastapi.HTTPException", "fastapi.status", "fastapi.Query", "fastapi.Path", "fastapi.security.OAuth2PasswordBearer", "fastapi.security.OAuth2PasswordRequestForm", "fastapi.middleware.CorsMiddleware", "pydantic.BaseModel", "pydantic.EmailStr", "pydantic.Field", "typing.List", "typing.Optional", "sqlalchemy.orm.Session", "passlib.context.CryptContext", "jwt", "os.environ.get", "datetime.datetime", "datetime.timedelta", "src.database.User", "src.database.Note", "src.database.Category", "src.database.get_db", "src.database.init_db"], "published": ["verify_password", "get_password_hash", "create_access_token", "decode_access_token", "get_current_user", "app", "health_check", "signup", "login", "read_users_me", "get_categories", "create_category", "delete_category", "list_notes", "get_note", "create_note", "update_note", "delete_note"], "classes": [{"name": "UserCreate", "description": "Pydantic model for user registration input."}, {"name": "UserRead", "description": "Pydantic model for user data exposed externally."}, {"name": "Token", "description": "Pydantic model for JWT token response."}, {"name": "CategoryRead", "description": "Pydantic model for category data exposed externally."}, {"name": "CategoryCreate", "description": "Pydantic model for creating a category."}, {"name": "NoteRead", "description": "Pydantic model for note data exposed externally."}, {"name": "NoteCreate", "description": "Pydantic model for creating a note."}, {"name": "NoteUpdate", "description": "Pydantic model for updating a note."}], "methods": [{"name": "verify_password(plain_password, hashed_password)", "description": "Verify a plain password against a hashed password.", "scope": "", "scopeKind": ""}, {"name": "get_password_hash(password)", "description": "Hash a plaintext password.", "scope": "", "scopeKind": ""}, {"name": "create_access_token(data: dict, expires_delta: Optional[timedelta] = None)", "description": "Create a new JWT token with optional expiry.", "scope": "", "scopeKind": ""}, {"name": "decode_access_token(token: str)", "description": "Decode and validate a JWT token.", "scope": "", "scopeKind": ""}, {"name": "get_current_user( token: str = Depends(oauth2_scheme), db: Session = Depends(get_db) )", "description": "Retrieve current user from JWT token and database.", "scope": "", "scopeKind": ""}, {"name": "health_check()", "description": "Health check endpoint to verify API status.", "scope": "", "scopeKind": ""}, {"name": "signup(user_in: UserCreate, db: Session = Depends(get_db))", "description": "Register a new user, storing hashed password.", "scope": "", "scopeKind": ""}, {"name": "login(form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(get_db))", "description": "Authenticate user and generate JWT token.", "scope": "", "scopeKind": ""}, {"name": "read_users_me(current_user: User = Depends(get_current_user))", "description": "Get current authenticated user info.", "scope": "", "scopeKind": ""}, {"name": "get_categories( db: Session = Depends(get_db), current_user: User = Depends(get_current_user) )", "description": "List all categories owned by current user.", "scope": "", "scopeKind": ""}, {"name": "create_category( cat_in: CategoryCreate, db: Session = Depends(get_db), current_user: User = Depends(get_current_user) )", "description": "Create a new category.", "scope": "", "scopeKind": ""}, {"name": "delete_category( category_id: int = Path(..., gt=0), db: Session = Depends(get_db), current_user: User = Depends(get_current_user) )", "description": "Remove a category along with its notes.", "scope": "", "scopeKind": ""}, {"name": "list_notes( db: Session = Depends(get_db), current_user: User = Depends(get_current_user), category_id: Optional[int] = Query(None, description=\"Filter by category id\"), search: Optional[str] = Query(None, description=\"Search term in title/content\"), skip: int = Query(0, ge=0, description=\"Pagination skip\"), limit: int = Query(20, ge=1, le=100, description=\"Pagination limit\"), sort: Optional[str] = Query(\"created_at_desc\", description=\"Sort by: 'created_at_desc', 'created_at_asc', 'title_asc', 'title_desc'\") )", "description": "Retrieve list of notes with optional filters and sorting.", "scope": "", "scopeKind": ""}, {"name": "get_note( note_id: int = Path(..., gt=0), db: Session = Depends(get_db), current_user: User = Depends(get_current_user) )", "description": "Get detailed info of a specific note.", "scope": "", "scopeKind": ""}, {"name": "create_note( note_in: NoteCreate, db: Session = Depends(get_db), current_user: User = Depends(get_current_user) )", "description": "Create a new note under the current user.", "scope": "", "scopeKind": ""}, {"name": "update_note( note_id: int, note_in: NoteUpdate, db: Session = Depends(get_db), current_user: User = Depends(get_current_user) )", "description": "Update an existing note.", "scope": "", "scopeKind": ""}, {"name": "delete_note( note_id: int, db: Session = Depends(get_db), current_user: User = Depends(get_current_user) )", "description": "Delete a note owned by the current user.", "scope": "", "scopeKind": ""}, {"name": "startup_event()", "scope": "", "scopeKind": "", "description": "unavailable"}], "search-terms": ["FastAPI", "JWT", "notes", "categories", "auth", "user management", "CRUD", "search", "filter", "CORS", "pagination", "OAuth2", "token", "database"], "state": 2, "file_id": 2, "knowledge_revision": 12, "git_revision": "df3f45e4c6c6e0709bdd0fe72db674622f119a16", "revision_history": [{"8": "52d9eddae3e46d5f730cd1573ce156be9604e754"}, {"12": "df3f45e4c6c6e0709bdd0fe72db674622f119a16"}], "ctags": [{"_type": "tag", "name": "ACCESS_TOKEN_EXPIRE_MINUTES", "path": "/home/kavia/workspace/code-generation/note-organizer-143905-143951/notes_backend/src/api/main.py", "pattern": "/^ACCESS_TOKEN_EXPIRE_MINUTES = int(os.environ.get(\"NOTES_ACCESS_TOKEN_EXPIRE_MINUTES\", \"60\"))$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "ALGORITHM", "path": "/home/kavia/workspace/code-generation/note-organizer-143905-143951/notes_backend/src/api/main.py", "pattern": "/^ALGORITHM = \"HS256\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "CategoryCreate", "path": "/home/kavia/workspace/code-generation/note-organizer-143905-143951/notes_backend/src/api/main.py", "pattern": "/^class CategoryCreate(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "CategoryRead", "path": "/home/kavia/workspace/code-generation/note-organizer-143905-143951/notes_backend/src/api/main.py", "pattern": "/^class CategoryRead(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "Config", "path": "/home/kavia/workspace/code-generation/note-organizer-143905-143951/notes_backend/src/api/main.py", "pattern": "/^    class Config:$/", "language": "Python", "kind": "class", "scope": "CategoryRead", "scopeKind": "class"}, {"_type": "tag", "name": "Config", "path": "/home/kavia/workspace/code-generation/note-organizer-143905-143951/notes_backend/src/api/main.py", "pattern": "/^    class Config:$/", "language": "Python", "kind": "class", "scope": "NoteRead", "scopeKind": "class"}, {"_type": "tag", "name": "Config", "path": "/home/kavia/workspace/code-generation/note-organizer-143905-143951/notes_backend/src/api/main.py", "pattern": "/^    class Config:$/", "language": "Python", "kind": "class", "scope": "UserRead", "scopeKind": "class"}, {"_type": "tag", "name": "NoteCreate", "path": "/home/kavia/workspace/code-generation/note-organizer-143905-143951/notes_backend/src/api/main.py", "pattern": "/^class NoteCreate(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "NoteRead", "path": "/home/kavia/workspace/code-generation/note-organizer-143905-143951/notes_backend/src/api/main.py", "pattern": "/^class NoteRead(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "NoteUpdate", "path": "/home/kavia/workspace/code-generation/note-organizer-143905-143951/notes_backend/src/api/main.py", "pattern": "/^class NoteUpdate(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "SECRET_KEY", "path": "/home/kavia/workspace/code-generation/note-organizer-143905-143951/notes_backend/src/api/main.py", "pattern": "/^SECRET_KEY = os.environ.get(\"NOTES_SECRET_KEY\", \"dev-secret\")  # Don't use this default in produ/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "Token", "path": "/home/kavia/workspace/code-generation/note-organizer-143905-143951/notes_backend/src/api/main.py", "pattern": "/^class Token(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "UserCreate", "path": "/home/kavia/workspace/code-generation/note-organizer-143905-143951/notes_backend/src/api/main.py", "pattern": "/^class UserCreate(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "UserRead", "path": "/home/kavia/workspace/code-generation/note-organizer-143905-143951/notes_backend/src/api/main.py", "pattern": "/^class UserRead(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/note-organizer-143905-143951/notes_backend/src/api/main.py", "pattern": "/^app = FastAPI($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "category_id", "path": "/home/kavia/workspace/code-generation/note-organizer-143905-143951/notes_backend/src/api/main.py", "pattern": "/^    category_id: Optional[int] = Field(None, description=\"ID of category (optional)\")$/", "language": "Python", "typeref": "typename:Optional[int]", "kind": "variable", "scope": "NoteCreate", "scopeKind": "class"}, {"_type": "tag", "name": "create_access_token", "path": "/home/kavia/workspace/code-generation/note-organizer-143905-143951/notes_backend/src/api/main.py", "pattern": "/^def create_access_token(data: dict, expires_delta: Optional[timedelta] = None):$/", "language": "Python", "kind": "function", "signature": "(data: dict, expires_delta: Optional[timedelta] = None)"}, {"_type": "tag", "name": "create_category", "path": "/home/kavia/workspace/code-generation/note-organizer-143905-143951/notes_backend/src/api/main.py", "pattern": "/^def create_category($/", "language": "Python", "kind": "function", "signature": "( cat_in: CategoryCreate, db: Session = Depends(get_db), current_user: User = Depends(get_current_user) )"}, {"_type": "tag", "name": "create_note", "path": "/home/kavia/workspace/code-generation/note-organizer-143905-143951/notes_backend/src/api/main.py", "pattern": "/^def create_note($/", "language": "Python", "kind": "function", "signature": "( note_in: NoteCreate, db: Session = Depends(get_db), current_user: User = Depends(get_current_user) )"}, {"_type": "tag", "name": "decode_access_token", "path": "/home/kavia/workspace/code-generation/note-organizer-143905-143951/notes_backend/src/api/main.py", "pattern": "/^def decode_access_token(token: str):$/", "language": "Python", "kind": "function", "signature": "(token: str)"}, {"_type": "tag", "name": "delete_category", "path": "/home/kavia/workspace/code-generation/note-organizer-143905-143951/notes_backend/src/api/main.py", "pattern": "/^def delete_category($/", "language": "Python", "kind": "function", "signature": "( category_id: int = Path(..., gt=0), db: Session = Depends(get_db), current_user: User = Depends(get_current_user) )"}, {"_type": "tag", "name": "delete_note", "path": "/home/kavia/workspace/code-generation/note-organizer-143905-143951/notes_backend/src/api/main.py", "pattern": "/^def delete_note($/", "language": "Python", "kind": "function", "signature": "( note_id: int, db: Session = Depends(get_db), current_user: User = Depends(get_current_user) )"}, {"_type": "tag", "name": "email", "path": "/home/kavia/workspace/code-generation/note-organizer-143905-143951/notes_backend/src/api/main.py", "pattern": "/^    email: EmailStr = Field(..., description=\"Email address\")$/", "language": "Python", "typeref": "typename:EmailStr", "kind": "variable", "scope": "UserCreate", "scopeKind": "class"}, {"_type": "tag", "name": "get_categories", "path": "/home/kavia/workspace/code-generation/note-organizer-143905-143951/notes_backend/src/api/main.py", "pattern": "/^def get_categories($/", "language": "Python", "kind": "function", "signature": "( db: Session = Depends(get_db), current_user: User = Depends(get_current_user) )"}, {"_type": "tag", "name": "get_current_user", "path": "/home/kavia/workspace/code-generation/note-organizer-143905-143951/notes_backend/src/api/main.py", "pattern": "/^def get_current_user($/", "language": "Python", "kind": "function", "signature": "( token: str = Depends(oauth2_scheme), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "get_note", "path": "/home/kavia/workspace/code-generation/note-organizer-143905-143951/notes_backend/src/api/main.py", "pattern": "/^def get_note($/", "language": "Python", "kind": "function", "signature": "( note_id: int = Path(..., gt=0), db: Session = Depends(get_db), current_user: User = Depends(get_current_user) )"}, {"_type": "tag", "name": "get_password_hash", "path": "/home/kavia/workspace/code-generation/note-organizer-143905-143951/notes_backend/src/api/main.py", "pattern": "/^def get_password_hash(password):$/", "language": "Python", "kind": "function", "signature": "(password)"}, {"_type": "tag", "name": "health_check", "path": "/home/kavia/workspace/code-generation/note-organizer-143905-143951/notes_backend/src/api/main.py", "pattern": "/^def health_check():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "list_notes", "path": "/home/kavia/workspace/code-generation/note-organizer-143905-143951/notes_backend/src/api/main.py", "pattern": "/^def list_notes($/", "language": "Python", "kind": "function", "signature": "( db: Session = Depends(get_db), current_user: User = Depends(get_current_user), category_id: Optional[int] = Query(None, description=\"Filter by category id\"), search: Optional[str] = Query(None, description=\"Search term in title/content\"), skip: int = Query(0, ge=0, description=\"Pagination skip\"), limit: int = Query(20, ge=1, le=100, description=\"Pagination limit\"), sort: Optional[str] = Query(\"created_at_desc\", description=\"Sort by: 'created_at_desc', 'created_at_asc', 'title_asc', 'title_desc'\") )"}, {"_type": "tag", "name": "login", "path": "/home/kavia/workspace/code-generation/note-organizer-143905-143951/notes_backend/src/api/main.py", "pattern": "/^def login(form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(get_db))"}, {"_type": "tag", "name": "name", "path": "/home/kavia/workspace/code-generation/note-organizer-143905-143951/notes_backend/src/api/main.py", "pattern": "/^    name: str = Field(..., min_length=1, max_length=100)$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "CategoryCreate", "scopeKind": "class"}, {"_type": "tag", "name": "oauth2_scheme", "path": "/home/kavia/workspace/code-generation/note-organizer-143905-143951/notes_backend/src/api/main.py", "pattern": "/^oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"\\/auth\\/token\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "orm_mode", "path": "/home/kavia/workspace/code-generation/note-organizer-143905-143951/notes_backend/src/api/main.py", "pattern": "/^        orm_mode = True$/", "language": "Python", "kind": "variable", "scope": "CategoryRead.Config", "scopeKind": "class"}, {"_type": "tag", "name": "orm_mode", "path": "/home/kavia/workspace/code-generation/note-organizer-143905-143951/notes_backend/src/api/main.py", "pattern": "/^        orm_mode = True$/", "language": "Python", "kind": "variable", "scope": "NoteRead.Config", "scopeKind": "class"}, {"_type": "tag", "name": "orm_mode", "path": "/home/kavia/workspace/code-generation/note-organizer-143905-143951/notes_backend/src/api/main.py", "pattern": "/^        orm_mode = True$/", "language": "Python", "kind": "variable", "scope": "UserRead.Config", "scopeKind": "class"}, {"_type": "tag", "name": "password", "path": "/home/kavia/workspace/code-generation/note-organizer-143905-143951/notes_backend/src/api/main.py", "pattern": "/^    password: str = Field(..., min_length=6, max_length=255, description=\"Password\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "UserCreate", "scopeKind": "class"}, {"_type": "tag", "name": "pwd_context", "path": "/home/kavia/workspace/code-generation/note-organizer-143905-143951/notes_backend/src/api/main.py", "pattern": "/^pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "read_users_me", "path": "/home/kavia/workspace/code-generation/note-organizer-143905-143951/notes_backend/src/api/main.py", "pattern": "/^def read_users_me(current_user: User = Depends(get_current_user)):$/", "language": "Python", "kind": "function", "signature": "(current_user: User = Depends(get_current_user))"}, {"_type": "tag", "name": "signup", "path": "/home/kavia/workspace/code-generation/note-organizer-143905-143951/notes_backend/src/api/main.py", "pattern": "/^def signup(user_in: UserCreate, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(user_in: UserCreate, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "startup_event", "path": "/home/kavia/workspace/code-generation/note-organizer-143905-143951/notes_backend/src/api/main.py", "pattern": "/^def startup_event():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/note-organizer-143905-143951/notes_backend/src/api/main.py", "pattern": "/^    title: str = Field(..., min_length=1, max_length=255)$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "NoteCreate", "scopeKind": "class"}, {"_type": "tag", "name": "token_type", "path": "/home/kavia/workspace/code-generation/note-organizer-143905-143951/notes_backend/src/api/main.py", "pattern": "/^    token_type: str = \"bearer\"$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "Token", "scopeKind": "class"}, {"_type": "tag", "name": "update_note", "path": "/home/kavia/workspace/code-generation/note-organizer-143905-143951/notes_backend/src/api/main.py", "pattern": "/^def update_note($/", "language": "Python", "kind": "function", "signature": "( note_id: int, note_in: NoteUpdate, db: Session = Depends(get_db), current_user: User = Depends(get_current_user) )"}, {"_type": "tag", "name": "username", "path": "/home/kavia/workspace/code-generation/note-organizer-143905-143951/notes_backend/src/api/main.py", "pattern": "/^    username: str = Field(..., min_length=3, max_length=50, description=\"Unique username\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "UserCreate", "scopeKind": "class"}, {"_type": "tag", "name": "verify_password", "path": "/home/kavia/workspace/code-generation/note-organizer-143905-143951/notes_backend/src/api/main.py", "pattern": "/^def verify_password(plain_password, hashed_password):$/", "language": "Python", "kind": "function", "signature": "(plain_password, hashed_password)"}], "hash": "27cbc517077b6254b024013e149630ae", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/api/main.py", "fields": [{"name": "ACCESS_TOKEN_EXPIRE_MINUTES = int(os.environ.get(\"NOTES_ACCESS_TOKEN_EXPIRE_MINUTES\", \"60\"))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "ALGORITHM = \"HS256\"", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "SECRET_KEY = os.environ.get(\"NOTES_SECRET_KEY\", \"dev-secret\")  # Don't use this default in produ/", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "app = FastAPI(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Optional[int] category_id", "scope": "NoteCreate", "scopeKind": "class", "description": "unavailable"}, {"name": "EmailStr email", "scope": "UserCreate", "scopeKind": "class", "description": "unavailable"}, {"name": "str name", "scope": "CategoryCreate", "scopeKind": "class", "description": "unavailable"}, {"name": "oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"\\/auth\\/token\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "orm_mode = True", "scope": "CategoryRead.Config", "scopeKind": "class", "description": "unavailable"}, {"name": "str password", "scope": "UserCreate", "scopeKind": "class", "description": "unavailable"}, {"name": "pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "str title", "scope": "NoteCreate", "scopeKind": "class", "description": "unavailable"}, {"name": "str token_type", "scope": "Token", "scopeKind": "class", "description": "unavailable"}, {"name": "str username", "scope": "UserCreate", "scopeKind": "class", "description": "unavailable"}]}